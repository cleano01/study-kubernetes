apiVersion: v1
kind: ServiceAccount
metadata:
  name: server

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole #type of rule for the cluster
metadata:
  name: server-read
rules: #rules bellow for the  cluster
- apiGroups: [""] #determines which features we will have in our rule
  resources: ["pods","services"] #resources to used
  verbs: ["get","watch","list"] #actions that can be used on resources
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get","watch","list"]  
  
---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding #type of rule for the cluster
metadata:
  name: server-read-bind
subjects:
- kind: ServiceAccount
  name: server
  namespace: prod #name of namespace
roleRef:
  kind: ClusterRole
  name: server-read
  apiGroup: rbac.authorization.k8s.io

# ---

# apiVersion: rbac.authorization.k8s.io/v1
# kind: Role
# metadata:
#   name: server-read
# rules:
# - apiGroups: [""] #determines which features we will have in our rule
#   resources: ["pods","services"] #recursos
#   verbs: ["get","watch","list"] #ações que pode ser usados nos recursos
# - apiGroups: ["apps"]
#   resources: ["deployments"]
#   verbs: ["get","watch","list"]  
  
# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: RoleBinding #esse kind, é para fazer associação com algum do nosso serviceacount
# metadata:
#   name: server-read-bind
# subjects:
# - kind: ServiceAccount
#   name: server #nome da nossa serviceaccount
#   namespace: prod # nosso namespace que vai possui as regras que criamos
# roleRef: #aqui estamos atribuindo para nosso serviceaccount server
#   kind: Role
#   name: server-read 
#   apiGroup: rbac.authorization.k8s.io